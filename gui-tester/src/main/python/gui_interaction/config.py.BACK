# ------------------------
# User Specific          |
# ------------------------
data_dir = "./data"
output_dir = ""


# ------------------------
# YOLO variables         |
# ------------------------

# Generated anchors from GUI Image dataset using
# K-Means clustering

#anchors = [0.9817857382941845, 9.398278193098788,
#           5.52115919597547, 6.985948423888699,
#           0.9090057538352261, 1.94398118062752,
#           2.4060115242354794, 0.7252024765267888,
#           9.922079927099324, 1.5033104111199442]

anchors = [5.689762815680707,7.089220613019247,
           4.146250839026031,2.8451912727793127,
           1.184713044693887,4.635493841471227,
           6.401568727399865,0.5919843713657224,
           1.0073469991938633,0.6949452764581193]

# resolution of input image
width = 416
height = 416

# Threshold to identify a bounding box as correct
threshold = 0.1

# Use Nvidia CUDA for training?
cudnn_on_gpu = False

# Shape of the grid (subdivisions of image to apply anchors to)
grid_shape = [13, 13]

# ------------------------
# input files            |
# ------------------------

# Relative to [data_dir]

names_file = "data.names"
train_file = "train.txt"
validate_file = "validate.txt"
test_file = "test.txt"

images_dir = "images"
labels_dir = "labels"


# ------------------------
# training variables     |
# ------------------------
learning_rate_start = 0.0001
learning_rate_min = 0.00001
learning_rate_decay = 0.95
momentum = 0.9
object_detection_threshold = 0.12

# maximum training epochs
epochs = 100000

# Amount of images to train on in parallel
batch_size = 32

# standard deviation of variables when initialised
var_sd = 0.001

brightness_probability = 0.1
contrast_probability = 0.1
invert_probability = 0.1

brightness_var = 50
contrast_var = 1


# ------------------------
# output locations       |
# ------------------------

weights_dir = "weights"
results_dir = "results"
log_file = "loss.csv"

# GPU to use (defaults to CPU)
gpu = "/job:localhost/replica:0/task:0/device:CPU:0"
# gpu = "/gpu:0"


# ------------------------
# training weights       |
# ------------------------

coord_weight = 1.0
obj_weight = 5.0
noobj_weight = 1.0
class_weight = 1.0

# ------------------------
# testing properties     |
# ------------------------
window_name = "Firefox"

enable_logging = False

run_all_batches = True

fullscreen = False
resolution = [1920, 1080]

# fallback approach is no GUI window exists (either "random" or "application")
fallback = "application"
